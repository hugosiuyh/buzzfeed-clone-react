[{"/Users/dorafok/Desktop/buzzfeed-clone-react/src/index.js":"1","/Users/dorafok/Desktop/buzzfeed-clone-react/src/App.jsx":"2","/Users/dorafok/Desktop/buzzfeed-clone-react/src/components/AnswerBlock.jsx":"3","/Users/dorafok/Desktop/buzzfeed-clone-react/src/components/QuestionsBlock.jsx":"4","/Users/dorafok/Desktop/buzzfeed-clone-react/src/components/Title.jsx":"5","/Users/dorafok/Desktop/buzzfeed-clone-react/src/components/QuestionBlock.jsx":"6"},{"size":247,"mtime":1686146470522,"results":"7","hashOfConfig":"8"},{"size":2871,"mtime":1686146470521,"results":"9","hashOfConfig":"8"},{"size":2508,"mtime":1686150852822,"results":"10","hashOfConfig":"8"},{"size":1161,"mtime":1686146470522,"results":"11","hashOfConfig":"8"},{"size":266,"mtime":1686148193175,"results":"12","hashOfConfig":"8"},{"size":1167,"mtime":1686155685408,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"sbuauw",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dorafok/Desktop/buzzfeed-clone-react/src/index.js",[],[],[],"/Users/dorafok/Desktop/buzzfeed-clone-react/src/App.jsx",[],[],"/Users/dorafok/Desktop/buzzfeed-clone-react/src/components/AnswerBlock.jsx",["34","35"],[],"import {useEffect, useState, forwardRef} from 'react'\n\nconst AnswerBlock = ({answerOptions, chosenAnswers,nicki}, ref) => {\n    const [result, setResult] = useState(null)\n    const [scores, setScores] = useState({ \n    'rookie': 0, \n    'chun_li': 0, \n    'um_chile': 0, \n    'academic': 0, \n    'onika_burger': 0, \n    'emo_onika': 0, \n    'roman_zolanski': 0, \n    'barbie': 0 });\n    // console.log(chosenAnswers,'chosenAnswers')\n    // move this to question block later \n    useEffect(() => {\n        if (chosenAnswers.every(item => item !== null)) { // chosen answer Items??\n            // If the chosenAnswerItems array is fully filled, calculate the scores\n            let newScores = { \n                'rookie': 0, \n                'chun_li': 0, \n                'um_chile': 0, \n                'academic': 0, \n                'onika_burger': 0, \n                'emo_onika': 0, \n                'roman_zolanski': 0, \n                'barbie': 0 };\n    \n            chosenAnswers.forEach((answer, index) => {\n                const question = answerOptions[index].questions;  // Retrieve the question by index\n                const answerScores = question[answer].score;  // Retrieve the scores for the chosen answer\n                console.log(question, answerScores,'q&a')\n                Object.keys(answerScores).forEach(nicki => {\n                    newScores[nicki] += answerScores[nicki];\n                });\n            });\n            console.log(newScores,'newScores')\n            setScores(newScores);  // Update the scores state\n\n            // find maximum and go back to answers\n            let maxNicki = Object.entries(newScores).reduce((max, [nicki, score]) => \n                (!max || score > max[1]) ? [nicki, score] : max, \n                null)[0];\n\n            console.log(maxNicki, answerOptions)\n            console.log(nicki)\n            setResult(nicki[maxNicki])\n            console.log(result)\n        }\n    }, [result]);\n\n    return (\n        <div ref={ref} className=\"answer-block\">\n            <h2>You are: <br></br> {result?.text}</h2>\n            <p>{result?.explanation}</p>\n            <img src={result?.image} alt={result?.text} className = \"resultimg\"/>\n            { /*<iframe src={result?.image}alt={result?.text} width=\"480\" height=\"424\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen ></iframe><p><a href=\"https://giphy.com/gifs/ymcmb-barbie-young-money-eb8qyRYKqevYc\">via GIPHY</a></p>*/}\n        </div>\n    )\n}\n\nexport default forwardRef(AnswerBlock)","/Users/dorafok/Desktop/buzzfeed-clone-react/src/components/QuestionsBlock.jsx",[],[],"/Users/dorafok/Desktop/buzzfeed-clone-react/src/components/Title.jsx",[],[],"/Users/dorafok/Desktop/buzzfeed-clone-react/src/components/QuestionBlock.jsx",[],[],{"ruleId":"36","severity":1,"message":"37","line":5,"column":12,"nodeType":"38","messageId":"39","endLine":5,"endColumn":18},{"ruleId":"40","severity":1,"message":"41","line":50,"column":8,"nodeType":"42","endLine":50,"endColumn":16,"suggestions":"43"},"no-unused-vars","'scores' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'answerOptions', 'chosenAnswers', and 'nicki'. Either include them or remove the dependency array. If 'setResult' needs the current value of 'nicki', you can also switch to useReducer instead of useState and read 'nicki' in the reducer.","ArrayExpression",["44"],{"desc":"45","fix":"46"},"Update the dependencies array to be: [answerOptions, chosenAnswers, nicki, result]",{"range":"47","text":"48"},[1949,1957],"[answerOptions, chosenAnswers, nicki, result]"]