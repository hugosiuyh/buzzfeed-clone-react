{"ast":null,"code":"var _jsxFileName = \"/Users/dorafok/Desktop/buzzfeed-clone-react/src/components/QuestionBlock.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionBlock = _ref => {\n  let {\n    question,\n    quizItemId,\n    setChosenAnswerItems,\n    chosenAnswerItems,\n    unansweredQuestionIds,\n    setUnansweredQuestionIds\n  } = _ref;\n  const handleClick = () => {\n    setChosenAnswerItems(prevState => {\n      let newState = [...prevState];\n      newState[quizItemId] = question.text;\n      return newState;\n    });\n    setUnansweredQuestionIds(unansweredQuestionIds.filter(id => id !== quizItemId));\n  };\n  const validPick = !(chosenAnswerItems !== null && chosenAnswerItems !== void 0 && chosenAnswerItems.includes(question.text)) && !(unansweredQuestionIds !== null && unansweredQuestionIds !== void 0 && unansweredQuestionIds.includes(quizItemId));\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"question-block\",\n    onClick: handleClick,\n    disabled: validPick,\n    \"vertical-align\": \"middle\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: question.image,\n      alt: question.alt,\n      className: \"img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [question.text, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: question.image,\n        children: [question.credit, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = QuestionBlock;\nexport default QuestionBlock;\nvar _c;\n$RefreshReg$(_c, \"QuestionBlock\");","map":{"version":3,"names":["QuestionBlock","_ref","question","quizItemId","setChosenAnswerItems","chosenAnswerItems","unansweredQuestionIds","setUnansweredQuestionIds","handleClick","prevState","newState","text","filter","id","validPick","includes","_jsxDEV","className","onClick","disabled","children","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","credit","_c","$RefreshReg$"],"sources":["/Users/dorafok/Desktop/buzzfeed-clone-react/src/components/QuestionBlock.jsx"],"sourcesContent":["const QuestionBlock = ({\n                           question,\n                           quizItemId,\n                           setChosenAnswerItems,\n                           chosenAnswerItems,\n                           unansweredQuestionIds,\n                           setUnansweredQuestionIds\n                       }) => {\n\n    const handleClick = () => {\n        setChosenAnswerItems(prevState => {\n        let newState = [...prevState];\n            newState[quizItemId] = question.text;\n            return newState;\n        })\n        setUnansweredQuestionIds(unansweredQuestionIds.filter((id) => id !== quizItemId))\n    }\n\n    const validPick = !chosenAnswerItems?.includes(question.text) &&\n        !unansweredQuestionIds?.includes(quizItemId)\n\n\n    return (\n        <button\n            className=\"question-block\"\n            onClick={handleClick}\n            disabled={validPick}\n            vertical-align = \"middle\"\n        >\n            <img src={question.image} alt={question.alt} className=\"img\"/>\n            <h3>{question.text} </h3>\n            <p>\n                <a href={question.image}>{question.credit} </a>\n            </p>\n\n        </button>\n    )\n}\n\nexport default QuestionBlock"],"mappings":";;AAAA,MAAMA,aAAa,GAAGC,IAAA,IAOO;EAAA,IAPN;IACIC,QAAQ;IACRC,UAAU;IACVC,oBAAoB;IACpBC,iBAAiB;IACjBC,qBAAqB;IACrBC;EACJ,CAAC,GAAAN,IAAA;EAEpB,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACtBJ,oBAAoB,CAACK,SAAS,IAAI;MAClC,IAAIC,QAAQ,GAAG,CAAC,GAAGD,SAAS,CAAC;MACzBC,QAAQ,CAACP,UAAU,CAAC,GAAGD,QAAQ,CAACS,IAAI;MACpC,OAAOD,QAAQ;IACnB,CAAC,CAAC;IACFH,wBAAwB,CAACD,qBAAqB,CAACM,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKV,UAAU,CAAC,CAAC;EACrF,CAAC;EAED,MAAMW,SAAS,GAAG,EAACT,iBAAiB,aAAjBA,iBAAiB,eAAjBA,iBAAiB,CAAEU,QAAQ,CAACb,QAAQ,CAACS,IAAI,CAAC,KACzD,EAACL,qBAAqB,aAArBA,qBAAqB,eAArBA,qBAAqB,CAAES,QAAQ,CAACZ,UAAU,CAAC;EAGhD,oBACIa,OAAA;IACIC,SAAS,EAAC,gBAAgB;IAC1BC,OAAO,EAAEV,WAAY;IACrBW,QAAQ,EAAEL,SAAU;IACpB,kBAAiB,QAAQ;IAAAM,QAAA,gBAEzBJ,OAAA;MAAKK,GAAG,EAAEnB,QAAQ,CAACoB,KAAM;MAACC,GAAG,EAAErB,QAAQ,CAACqB,GAAI;MAACN,SAAS,EAAC;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9DX,OAAA;MAAAI,QAAA,GAAKlB,QAAQ,CAACS,IAAI,EAAC,GAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBX,OAAA;MAAAI,QAAA,eACIJ,OAAA;QAAGY,IAAI,EAAE1B,QAAQ,CAACoB,KAAM;QAAAF,QAAA,GAAElB,QAAQ,CAAC2B,MAAM,EAAC,GAAC;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEjB,CAAC;AAAAG,EAAA,GArCK9B,aAAa;AAuCnB,eAAeA,aAAa;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}