{"ast":null,"code":"import _slicedToArray from\"/Users/hugo/code/nicki/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState,forwardRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AnswerBlock=function AnswerBlock(_ref,ref){var answerOptions=_ref.answerOptions,chosenAnswers=_ref.chosenAnswers,nicki=_ref.nicki;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),result=_useState2[0],setResult=_useState2[1];var _useState3=useState({'rookie':0,'chun_li':0,'um_chile':0,'academic':0,'onika_burger':0,'emo_onika':0,'roman_zolanski':0,'barbie':0}),_useState4=_slicedToArray(_useState3,2),scores=_useState4[0],setScores=_useState4[1];// console.log(chosenAnswers,'chosenAnswers')\n// move this to question block later \nuseEffect(function(){if(chosenAnswers.every(function(item){return item!==null;})){// chosen answer Items??\n// If the chosenAnswerItems array is fully filled, calculate the scores\nvar newScores={'rookie':0,'chun_li':0,'um_chile':0,'academic':0,'onika_burger':0,'emo_onika':0,'roman_zolanski':0,'barbie':0};chosenAnswers.forEach(function(answer,index){var question=answerOptions[index].questions;// Retrieve the question by index\nvar answerScores=question[answer].score;// Retrieve the scores for the chosen answer\nconsole.log(question,answerScores,'q&a');Object.keys(answerScores).forEach(function(nicki){newScores[nicki]+=answerScores[nicki];});});console.log(newScores,'newScores');setScores(newScores);// Update the scores state\n// find maximum and go back to answers\nvar maxNicki=Object.entries(newScores).reduce(function(max,_ref2){var _ref3=_slicedToArray(_ref2,2),nicki=_ref3[0],score=_ref3[1];return!max||score>max[1]?[nicki,score]:max;},null)[0];console.log(maxNicki,answerOptions);console.log(nicki);setResult(nicki[maxNicki]);console.log(result);}},[result]);return/*#__PURE__*/_jsxs(\"div\",{ref:ref,className:\"answer-block\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"You are: \",/*#__PURE__*/_jsx(\"br\",{}),\" \",result===null||result===void 0?void 0:result.text]}),/*#__PURE__*/_jsx(\"p\",{children:result===null||result===void 0?void 0:result.explanation}),/*#__PURE__*/_jsx(\"img\",{src:result===null||result===void 0?void 0:result.image,alt:result===null||result===void 0?void 0:result.text,className:\"resultimg\"})]});};export default/*#__PURE__*/forwardRef(AnswerBlock);","map":{"version":3,"names":["useEffect","useState","forwardRef","jsx","_jsx","jsxs","_jsxs","AnswerBlock","_ref","ref","answerOptions","chosenAnswers","nicki","_useState","_useState2","_slicedToArray","result","setResult","_useState3","_useState4","scores","setScores","every","item","newScores","forEach","answer","index","question","questions","answerScores","score","console","log","Object","keys","maxNicki","entries","reduce","max","_ref2","_ref3","className","children","text","explanation","src","image","alt"],"sources":["/Users/hugo/code/nicki/src/components/AnswerBlock.jsx"],"sourcesContent":["import {useEffect, useState, forwardRef} from 'react'\n\nconst AnswerBlock = ({answerOptions, chosenAnswers,nicki}, ref) => {\n    const [result, setResult] = useState(null)\n    const [scores, setScores] = useState({ \n    'rookie': 0, \n    'chun_li': 0, \n    'um_chile': 0, \n    'academic': 0, \n    'onika_burger': 0, \n    'emo_onika': 0, \n    'roman_zolanski': 0, \n    'barbie': 0 });\n    // console.log(chosenAnswers,'chosenAnswers')\n    // move this to question block later \n    useEffect(() => {\n        if (chosenAnswers.every(item => item !== null)) { // chosen answer Items??\n            // If the chosenAnswerItems array is fully filled, calculate the scores\n            let newScores = { \n                'rookie': 0, \n                'chun_li': 0, \n                'um_chile': 0, \n                'academic': 0, \n                'onika_burger': 0, \n                'emo_onika': 0, \n                'roman_zolanski': 0, \n                'barbie': 0 };\n    \n            chosenAnswers.forEach((answer, index) => {\n                const question = answerOptions[index].questions;  // Retrieve the question by index\n                const answerScores = question[answer].score;  // Retrieve the scores for the chosen answer\n                console.log(question, answerScores,'q&a')\n                Object.keys(answerScores).forEach(nicki => {\n                    newScores[nicki] += answerScores[nicki];\n                });\n            });\n            console.log(newScores,'newScores')\n            setScores(newScores);  // Update the scores state\n\n            // find maximum and go back to answers\n            let maxNicki = Object.entries(newScores).reduce((max, [nicki, score]) => \n                (!max || score > max[1]) ? [nicki, score] : max, \n                null)[0];\n\n            console.log(maxNicki, answerOptions)\n            console.log(nicki)\n            setResult(nicki[maxNicki])\n            console.log(result)\n        }\n    }, [result]);\n\n    return (\n        <div ref={ref} className=\"answer-block\">\n            <h2>You are: <br></br> {result?.text}</h2>\n            <p>{result?.explanation}</p>\n            <img src={result?.image} alt={result?.text} className = \"resultimg\"/>\n            { /*<iframe src={result?.image}alt={result?.text} width=\"480\" height=\"424\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen ></iframe><p><a href=\"https://giphy.com/gifs/ymcmb-barbie-young-money-eb8qyRYKqevYc\">via GIPHY</a></p>*/}\n        </div>\n    )\n}\n\nexport default forwardRef(AnswerBlock)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}