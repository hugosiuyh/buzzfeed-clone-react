{"ast":null,"code":"var _jsxFileName = \"/Users/hugo/code/buzzfeed-clone-react/src/components/AnswerBlock.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, forwardRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnswerBlock = (_ref, ref) => {\n  _s();\n  let {\n    answerOptions,\n    chosenAnswers,\n    nicki\n  } = _ref;\n  const [result, setResult] = useState(null);\n  const [scores, setScores] = useState({\n    'rookie': 0,\n    'chun_li': 0,\n    'um_chile': 0,\n    'academic': 0,\n    'onika_burger': 0,\n    'emo_onika': 0,\n    'roman_zolanski': 0,\n    'barbie': 0\n  });\n  // console.log(chosenAnswers,'chosenAnswers')\n  // move this to question block later \n  useEffect(() => {\n    if (chosenAnswers.every(item => item !== null)) {\n      // chosen answer Items??\n      // If the chosenAnswerItems array is fully filled, calculate the scores\n      let newScores = {\n        'rookie': 0,\n        'chun_li': 0,\n        'um_chile': 0,\n        'academic': 0,\n        'onika_burger': 0,\n        'emo_onika': 0,\n        'roman_zolanski': 0,\n        'barbie': 0\n      };\n      chosenAnswers.forEach((answer, index) => {\n        const question = answerOptions[index].questions; // Retrieve the question by index\n        const answerScores = question[answer].score; // Retrieve the scores for the chosen answer\n        console.log(question, answerScores, 'q&a');\n        Object.keys(answerScores).forEach(nicki => {\n          newScores[nicki] += answerScores[nicki];\n        });\n      });\n      console.log(newScores, 'newScores');\n      setScores(newScores); // Update the scores state\n\n      // find maximum and go back to answers\n      let maxNicki = Object.entries(newScores).reduce((max, _ref2) => {\n        let [nicki, score] = _ref2;\n        return !max || score > max[1] ? [nicki, score] : max;\n      }, null)[0];\n      console.log(maxNicki, answerOptions);\n      console.log(nicki);\n      setResult(nicki[maxNicki]);\n      console.log(result);\n    }\n  }, [result]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"answer-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"You are: \", result === null || result === void 0 ? void 0 : result.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result === null || result === void 0 ? void 0 : result.explanation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: result === null || result === void 0 ? void 0 : result.image,\n      alt: result === null || result === void 0 ? void 0 : result.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(AnswerBlock, \"gUI/sqG3ZiB5zR3tj0UOh3IJSfA=\");\n_c = AnswerBlock;\nexport default _c2 = /*#__PURE__*/forwardRef(AnswerBlock);\nvar _c, _c2;\n$RefreshReg$(_c, \"AnswerBlock\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["useEffect","useState","forwardRef","jsxDEV","_jsxDEV","AnswerBlock","_ref","ref","_s","answerOptions","chosenAnswers","nicki","result","setResult","scores","setScores","every","item","newScores","forEach","answer","index","question","questions","answerScores","score","console","log","Object","keys","maxNicki","entries","reduce","max","_ref2","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","explanation","src","image","alt","_c","_c2","$RefreshReg$"],"sources":["/Users/hugo/code/buzzfeed-clone-react/src/components/AnswerBlock.jsx"],"sourcesContent":["import {useEffect, useState, forwardRef} from 'react'\n\nconst AnswerBlock = ({answerOptions, chosenAnswers,nicki}, ref) => {\n    const [result, setResult] = useState(null)\n    const [scores, setScores] = useState({ \n    'rookie': 0, \n    'chun_li': 0, \n    'um_chile': 0, \n    'academic': 0, \n    'onika_burger': 0, \n    'emo_onika': 0, \n    'roman_zolanski': 0, \n    'barbie': 0 });\n    // console.log(chosenAnswers,'chosenAnswers')\n    // move this to question block later \n    useEffect(() => {\n        if (chosenAnswers.every(item => item !== null)) { // chosen answer Items??\n            // If the chosenAnswerItems array is fully filled, calculate the scores\n            let newScores = { \n                'rookie': 0, \n                'chun_li': 0, \n                'um_chile': 0, \n                'academic': 0, \n                'onika_burger': 0, \n                'emo_onika': 0, \n                'roman_zolanski': 0, \n                'barbie': 0 };\n    \n            chosenAnswers.forEach((answer, index) => {\n                const question = answerOptions[index].questions;  // Retrieve the question by index\n                const answerScores = question[answer].score;  // Retrieve the scores for the chosen answer\n                console.log(question, answerScores,'q&a')\n                Object.keys(answerScores).forEach(nicki => {\n                    newScores[nicki] += answerScores[nicki];\n                });\n            });\n            console.log(newScores,'newScores')\n            setScores(newScores);  // Update the scores state\n\n            // find maximum and go back to answers\n            let maxNicki = Object.entries(newScores).reduce((max, [nicki, score]) => \n                (!max || score > max[1]) ? [nicki, score] : max, \n                null)[0];\n\n            console.log(maxNicki, answerOptions)\n            console.log(nicki)\n            setResult(nicki[maxNicki])\n            console.log(result)\n        }\n    }, [result]);\n\n    return (\n        <div ref={ref} className=\"answer-block\">\n            <h2>You are: {result?.text}</h2>\n            <p>{result?.explanation}</p>\n            <img src={result?.image} alt={result?.text}/>\n        </div>\n    )\n}\n\nexport default forwardRef(AnswerBlock)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}